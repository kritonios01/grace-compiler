fun h() : int
fun i(l, boo, e : int[4]; ref g, i : int[]; ref k, f : int[]) : int
fun baz(x : char[][11]; main, m : char[]; ref g, m : int[41]; a : char[][6]; c, a, boo : int) : nothing;
fun e(ref d, i : int[][17][25]; ref i, f, y : int[]) : nothing
fun e(e : int) : char
fun baz(g, y, n : int[]; ref i : char[11][15]) : nothing

{
  {
  {
  if 35 < 35 then return 30;
  if '\'' = 17 then "bar" <- '\n';
  if '\'' # 25 then {
  if 12 > 30 then if '\'' = '7' then while 'a' = 12 do ; else d('7'); else h();
  return;
  while '7' <= 1 do e <- 35;
  while 15 # 'a' do while 15 > 41 do while '7' = 31 do g(41, '7', 22);
}
}
  e <- ('\n' mod '\n');
  if 2 <= '7' then return;
  return ('a');
  if 'a' = '\'' then {
  {

}
} else c();
}
  {
  m <- m((41 - '7'));
}
  {
  y <- (29 mod 36);
  n <- + 33;
}
}

fun a(ref foo, e : char; ref bar, foo : char) : char
fun l() : int
fun l(ref f, z : char[]; ref l, k, k : char; g, x : char) : char
fun y(ref f, b : char; l, i, b : char[]) : char
fun i(ref h, h : int[][30][42]; ref c, d : int) : char;
var boo : char;

{
  e <- + 19;
  a <- y();
  z <- m;
  ;
  if '7' < 0 then ;
}

fun x(y, c, a : char[][10]; l, boo : int[]) : nothing
fun d(ref j : int[]) : char
fun x(foo : int[]; l, l, j : int; e : char[35]; bar, f : int[]) : nothing;
fun b(ref y, b, baz : char) : nothing;
fun k(ref j : char[]; ref x, bar, b : char; ref i : int; ref a, d, i : char[]; ref y, a, g : int[]) : nothing
var l, d : char[39];
fun bar(j, n, e : char[34][20]; main, boo, f : int[]; z, baz : char[12]; f : int[][27][42]) : nothing
fun boo(y : int[]; ref main : int[][14]) : nothing
fun d(f, x, y : int; ref g, x : int[]; m, d : char; x, i, k : int) : nothing

{
  {
  while 27 = '\'' do if 39 <= 'a' then if 'a' > '7' then ;
}
  ;
}

fun b() : char
var c, foo, n : char;
fun bar(ref a : int) : int
var a : char[41];

{

}


{
  {
  baz <- ('\n');
}
  return;
  ;
  l();
  k(+ (+ (f())), ("bar" mod (('7' mod '7'))), (n));
}


{
  if 41 <= '\'' then ; else y <- '\'';
  ;
  main <- ('7' div '\'');
  ;
  f <- i;
}

fun g(ref main, foo, m : int[][23][40]; b, boo, bar : int[][27]; ref k, e, x : int[][3]) : int
fun z(ref h, i, y : char[][15]; main : int; main : int[25]) : int
fun z(j, h : int[]; a : char[16][3]) : nothing

{
  {
  ;
  if '\n' > 17 then m(('\n'), ('\''));
  return;
  ;
  if '\'' # 'a' then j(- '\n', j); else return;
}
  {
  ;
  baz(+ (((('a')) * (i()))), f);
}
  while 26 < 19 do return;
  if '\n' # '\n' then l <- '7'; else {
  x[31] <- (12 div 41);
  while '\n' <= 26 do return '7';
  if '7' > '7' then return '\'';
}
  return c();
}

var b : char;

{

}

fun foo(b, boo : char; c, g, z : char[][30]; e, baz, l : int[][37][41]; ref c, a : char[][21]; x, h : char[23]) : int;

{

}

fun j(ref k, foo, h : int[]; ref z, x, e : char[][0][38]; ref d : int; ref bar : char[42]; k, a, h : char[][40][10]) : int;

{

}


{
  boo(e(g(), m(x)), - ((+ 32)), ((- 27) div (- 8)));
  return;
  if 13 = 'a' then main(('\n' mod 2), baz); else return;
  j <- ('\'' div '7');
  {
  y(+ ((j - foo)), (y));
}
}


{

}

fun baz(j, f, i : int[]; a, h, foo : char[]; ref j : int[]) : char
fun i(foo : int; ref main : int; ref k, g, m : int; h, a : char[][11][14]; k : char[]) : int
fun i(y, h, e : char[][20][19]; j, e : char; l : char[12]; ref j, z : char) : int
fun main(ref k, d : char; ref baz, g, g : char[][27]; ref baz, bar : int[23]) : char
fun m(ref x, g : char[]) : char

{
  baz(i());
  c <- e(m(('\'' div '7'), + '7'));
  while '7' >= '7' do {
  if 41 # 'a' then f <- '7';
  return i['7'];
}
  while 30 < 3 do return 19;
  bar(l);
}

fun e(ref i, baz, bar : char; z, x : int[6][40]; ref y : int[17]; ref x : int) : int

{

}

fun e(ref i, a, l : char) : nothing

{
  f(g);
}


{
  if '\n' <= 19 then e <- 3; else return '7';
  ;
  {
  ;
}
}


{
  g <- - 'a';
  y <- (13);
  k((+ 32));
  {
  ;
  ;
  b <- j[33];
  ;
}
  x <- + 9;
}

var h, c, boo : int[19];
fun foo(ref j, y, b : int[33]; ref boo, j, c : char; n : int[][28]) : int;

{
  ;
  b <- f();
  j();
  {
  ;
  while 8 > '\'' do while 33 >= 'a' do "Name:\t\"DouglasAdams\"\nValue:\t42\n" <- 0;
  while 15 # 24 do e <- 4;
}
}


{
  while 33 <= 29 do if '7' = 2 then while 30 >= '7' do n <- 29; else {
  if 1 = 'a' then {
  bar(((('\'')) - (m())), bar, main);
  ;
}
  "Route66" <- (34);
  return;
  m(+ (+ ((27))), - (((30 mod 2))), boo((((25)) * ((13 mod 'a'))), foo[(29)], (('\''))));
  while 12 = '7' do while '7' >= 0 do while 11 <= 6 do if '\n' < 'a' then if 19 >= '\n' then {

} else "bar" <- 'a';
}
  "Name:\t\"DouglasAdams\"\nValue:\t42\n" <- j;
}


{
  f['7'] <- - 8;
  z();
}


{
  bar(+ (- k));
  while 'a' <= '\n' do while 4 = 11 do {

}
  f <- "Route66";
  return baz("Route66", main((40)), c(c(+ '\n', "foo"), + '7'));
  bar <- + 'a';
}

fun c(ref d, f, e : int[][40]) : int;

{
  ;
}

fun i() : nothing;
fun bar(ref f, x, g : int[][13]; d, boo, j : int[][41][29]; g : int; ref foo, i : int[]) : nothing

{

}


{
  {

}
}

fun boo(z : char[][2][28]; j, baz, l : char[]) : int;

{
  {
  if 33 >= 'a' then return; else ;
  return;
  return;
}
}

fun j(k, i, k : int[]; ref g, l : char) : nothing;

{
  if '\n' >= '\'' then if 0 >= 'a' then bar <- 'a'; else return; else while '7' >= 28 do ;
  return (38 + 'a');
  "foo" <- - '7';
  {
  if 'a' >= '\n' then return 18; else baz(('\n' + '\n'), boo(h, (29 div '\''), x));
  return + '7';
}
  j(z(), m(+ (d())), + ((x + (b("bar", - '\'', - 27)))));
}

fun g(ref n : int[4][29]; f : int[]; ref g : int[]) : nothing

{
  if 38 < 'a' then boo <- 'a'; else while '\'' = '\n' do return 24;
  {
  return;
  {
  while '7' >= '7' do return '\n';
  ;
  ;
}
  if '7' = '\'' then ; else {
  j(+ d, ((42 div 5)), ((m(- '\'', l, + '\n')) - "bar"));
  i <- "bar"[6];
  z();
  return ('a' + 'a');
}
}
  {
  return;
  return;
  if '7' = '\'' then {

} else f(+ '\'');
}
  {

}
  ;
}


{
  while '7' > '\'' do if 4 < '7' then n('\n');
  {
  if 21 > 'a' then if '\n' = '7' then m('7'); else if '\n' < 27 then ; else i();
  {
  while 34 < '7' do "bar" <- '\'';
}
  ;
  f <- baz;
  while 'a' = '\'' do ;
}
}

var m, i, j : char;

{
  return;
  ;
  main(((- 5) div (+ 40)), (- 40));
  ;
  while 28 > 13 do ;
}
