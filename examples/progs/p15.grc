fun e(e : int; ref z, x, a : char; ref n, n, baz : int) : nothing
fun g(ref c, c, c : int[][25]; ref m : char[][15][7]; g, m, b : char[]; d : int[]; c, b : int[][13]) : nothing
fun boo(l, i, k : char; ref n : char[][20]) : nothing
var d : int[14][40];

{
  while '\n' >= 40 do while 'a' <= 'a' do baz();
  ;
  {
  if 'a' < 9 then ; else while 'a' < 'a' do h('\n');
  b(((y(l(baz, - '\'', + 25), - '\'')) + bar), - (((- '\'') - (+ 27))), (- '\n'));
  b(((+ 41) mod (('\n'))), ((- 30) div (z(('\'' div '\n')))), (('\'' - 5)));
  if 16 < 0 then {
  {
  ;
  {

}
  z(bar, (('7')));
}
  i <- m((7 mod 16));
}
  {
  baz <- b();
  while 31 < 24 do bar <- '\n';
  {
  if '\'' > '\n' then ;
  ;
  if '\n' = 22 then l(h); else boo((5), ('\n' * 39));
}
  if 2 >= 4 then z();
  {

}
}
}
  m <- + '7';
}


{
  while 0 >= '7' do ;
  ;
  c();
  main(boo[boo((15), + 28, (17))]);
  while '7' >= '7' do i();
}

fun c(ref b, bar, z : int[][28]; baz, g, g : char[][25]; g : char[8]; z, b, f : char[10]; ref d : char[]) : int

{
  k <- (13 * '\n');
  g((k + (('\n'))), (((7 div '\n')) mod (main())));
}

fun j(z, d : char[]; n, e, m : int[][4]) : char
fun main() : int
fun boo(ref e : int; x : char[]; ref k : char[18]) : nothing
fun a(k, boo, boo : int; ref i, c, b : char[]; l, foo, foo : char[][37]; g, y : int; z : int[][15]) : nothing
var x, k : char;
var baz, x, l : int[24];

{
  j <- (35);
}


{
  foo(z, (('a' + 28)));
  ;
  return ('\n');
}

fun g(ref f : int[]; ref a, bar : char[11]; g, h : char[20][11]; ref i : char[]) : char

{
  if '\n' < 7 then while '7' # 'a' do return;
  return;
  while 0 # 2 do {
  {
  while 33 > 24 do {
  if 8 < '\n' then ; else l((36 * 'a'), a((4 - 35)));
  baz((j * (foo())), (((19)) * m), ((i((11 - 40))) mod ((4 - 26))));
  e <- n;
}
  if '\n' # 5 then while 'a' < '\'' do ; else boo(- 41);
  n(((z()) * (- 31)));
}
  while 33 < 38 do while '\n' > 40 do g <- 'a';
  if 37 < '\n' then while 15 <= 'a' do {

} else a(('7'), (0));
  if 35 < '\n' then while '\n' <= 29 do ; else return;
}
}

fun y(ref n, f, l : int[7]; ref i, foo, f : char; ref bar, b, main : char[16][26]) : nothing
var foo, h, g : int;

{
  {
  return ('7');
  {
  if 'a' > '\'' then k((22 + '\n'));
  return n((14), ('\n' * 3), ('a' - '\n'));
}
  if '7' # 12 then {
  b <- ('\n' - '7');
}
}
  return ('a');
  c();
  while '\n' # 'a' do return 24;
}


{

}

fun b(ref c, l : int[]; ref main, c, main : char[]; k : char[][37]) : char

{
  return;
  while 17 <= '\n' do while '\n' >= 30 do "foo" <- 40;
  while 19 >= '\n' do foo <- 19;
}


{
  return boo(y(j(a, f(), - 34)), + '\n', f());
  baz((b), h, (('\n' * '\n')));
  while '\n' <= 17 do return;
  ;
  {
  if 'a' >= '\'' then x(f, (31 * 3)); else "Name:\t\"DouglasAdams\"\nValue:\t42\n"['\n'] <- '\n';
  foo(x[boo], a());
  if 26 >= 22 then m(- 18, ('\'' * 22), + 29); else while 'a' # 33 do if 'a' <= '\n' then return '\'';
  while '7' < '7' do {
  g();
  ;
}
}
}


{

}
