fun k(ref m : char[]; ref l, main : int[][35][20]; x, d : int[][11]; a, b, z : char; ref main, bar : int[]) : nothing
fun g() : nothing
fun l(ref bar, y, z : int[27]) : nothing

{
  return z((15 + '\n'), - 0, ('a' div 14));
}


{
  m <- "Route66"[20];
  if 36 < '\'' then while 22 > '\'' do if '\'' # 13 then while 9 # 20 do if 'a' # 23 then while 'a' # 14 do {
  m(((8 - 'a')), ((j['\n']) mod (- 'a')), (a));
  return;
  return;
} else if '\'' > '\'' then return '7';
  i <- f();
  while 3 = '7' do if '\n' >= 0 then {

}
  ;
}

fun b(ref boo, k, g : char[]) : nothing
fun i(ref z, b : char) : int
fun a(boo, i, bar : char[]; h, bar : char[5][36]) : int
var j, x, d : int[36];
fun k(ref g, j : char[][4]; baz, f : int[9]; y, baz, i : int; ref j, c : int) : nothing

{
  ;
  return;
  "Route66" <- "bar";
  bar <- (33 mod 'a');
}


{
  {
  k[40] <- (23);
  j <- - 1;
}
  while 1 < '\'' do while 21 > 'a' do {

}
  return (11 mod 3);
  if 4 = '\'' then return;
  {
  while 23 < 2 do n();
  m();
  a();
  ;
}
}

fun d(g, y, k : char[]) : nothing
fun main(l, m, i : int[][31]; e, h, a : int[][0]; ref m, boo, h : char) : nothing
fun n(baz, x, b : char; ref a, c, f : int[14]; b, m : char; ref x, m : char[][7]; baz : char[]) : int;

{
  boo <- ('a');
  {
  n <- n(l(), foo);
  ;
  ;
}
  {
  if '\n' < 35 then if 20 <= '\n' then n['\''] <- 16; else y();
  return + '\'';
  return;
  while 26 > '\n' do return;
}
  if 18 >= 'a' then if 34 <= 4 then b(1, '\n', 24); else while '7' <= '7' do {
  ;
  if '\n' < '\n' then ; else return 0;
}
  k <- main;
}

fun z(k, i : int; i, y : int[]; ref a : char[]) : char
fun k(ref x, baz, boo : int[]; ref b : int[26]; l, i : char[]) : nothing
fun f(bar, e, baz : char; ref e : char[][42]; ref f, n : int) : nothing
fun bar(baz, y : char[]; ref y, x : char[16][6]) : nothing
fun c(c, x, f : int[][23][9]; ref m, h, h : int[]) : nothing;

{
  ;
  return (20);
}

fun z(baz : int[][2]; ref d : int[]; k, c, y : char; ref d, main : char[3]; ref l, d : char[38]) : nothing

{
  {
  {
  while 'a' >= 10 do while '7' > 21 do {
  j <- ('\'' mod 'a');
  while 13 < '7' do h(('\n' mod 32), z[21], ('\'' + 8));
  if 12 = '\'' then ; else ;
  baz(g(d, (((41)) div ((25)))), baz(k((('a')), b(), ((b(y, ('\'' + 'a'), ('a'))) mod baz)), "Route66"), k(h(x((+ '\''), + (- (n((3 * 25), + (baz(('\n'))))))), - (- (- baz)), ((42))), ((+ '\n') * (boo((8 - 3), main, ('a')))), d()));
  baz(- ((((13)) - (b(- '\n')))), (('7')), d);
}
  {
  c(((- 'a') - x), c(((- 9) div (('\''))), f((- 16), x)), + ((('\n'))));
  y <- f;
}
}
  ;
  {

}
  return;
  ;
}
  ;
  return;
  x((((16 mod '\'')) * (- 21)));
}

fun b(ref h : int[40]) : char

{
  ;
  h <- e;
  b <- + 40;
  return d();
  ;
}


{

}

fun h(bar : int[]; z : char[20]; main, x : char[][28]; ref i, y, f : char[][33]) : nothing
fun m(ref z : int[]) : nothing
var main, z, a : char[13];

{
  if 'a' <= '\'' then return; else return;
  n(d(+ (d((k(- '\n', ('7' * 31), (39))), ((13 - '\n')))), (('\n' * '7'))), a, g(bar, - (((foo()) * (z()))), + ((('\'')))));
  f((('a' mod '7')), d);
}

fun i() : char
fun z(d, b : char[39][31]; a : char[][13][13]; ref a : int[20]) : nothing;
fun foo() : char
fun main(ref main, g, i : int[]; foo, foo, bar : char[][40]; ref l : int[]; d, k, i : char[]; d, j, g : char[]) : nothing
fun foo(y : char[1][30]; ref main, foo, y : char[7][28]) : nothing;
fun n(ref z : int[][36]; ref z, bar : int[]; ref c, y : char[]; n : char[][39][26]) : nothing

{

}


{
  return h;
  y <- - '\n';
  while 28 = 36 do return;
}

fun bar(main, j : int[][42]; c, boo : char; boo : int[24][16]) : nothing

{
  return (23 + '7');
  while 17 >= 'a' do bar(x((12 - '7')), boo, ('\''));
  while 29 <= 42 do while '\n' < '\n' do return;
}

var m, boo, i : int[20];

{
  ;
  {
  return ('a');
  ;
  while 6 <= 30 do return;
  m[40] <- n;
  {
  n();
  return;
  while '\n' >= 21 do return 'a';
  {
  if '\n' # '\'' then g();
}
}
}
}

fun baz(ref m : char) : int
fun bar(g, bar : int[0][10]; ref bar : int[]; i, a, k : char[]) : nothing;
fun boo() : nothing

{
  return;
  m <- k;
  ;
  d <- boo;
}


{

}


{
  "Route66" <- + 18;
}

fun i() : char
fun i(d, z, i : char[][8]; ref bar, a : int[][8]) : nothing
fun d(ref j : int[][6]; d : int[33]; ref main, z : int[]; l, e, d : int[]) : char
fun z(ref b, bar : char[][6]; h, i : int[]; ref y, n, c : int[][39][9]) : int
fun z(x, bar, l : char; g, h, c : char[][7]; ref x, b : int[38]; ref b, k, m : int; ref i : char[]) : char

{
  {
  while 'a' >= 36 do if 42 >= 28 then return;
  {
  baz((((1)) mod ((4))));
  if '7' = '\'' then return;
}
}
  ;
  return (16 div 31);
  while 37 <= '\n' do while 16 < '7' do foo('7', 4, '7');
}

fun z(l, b : int; ref x : int[]; d, i, x : int[26]; f : int[][30][16]; m, m : int[]) : int
fun e(ref h, g, x : char[3]) : nothing

{
  while '\'' > 5 do baz <- 38;
  c <- (28);
}


{

}

var z, d, x : char[25][14];

{
  if '7' # 4 then h <- '\n';
  m(+ (c(c)));
  return;
  e((j(i(d(bar(+ 30, + 22, + '\''), + '\'', (6)), ('\n'), bar(main(('a'), (36)))), boo(k, + '\'', ('a' * '7')), (29))), (c(c, ('\n' * '7'), d['7'])), main);
}


{
  m(+ (- i), bar);
  bar(a, ((g((20), (12 mod '\''), e(- 'a'))) mod (- '\'')), ("Route66"));
  baz <- - 1;
  d <- ('a' - '\'');
  g <- ('a' * 23);
}

var n, f : char[38];
fun a(ref boo, n, c : int[4][11]) : nothing;

{
  d <- (5 - 41);
}


{
  {
  baz((x(- 'a', j, (40 + 19))), c((baz), (('7' div 39))), e(z));
  while 36 > '\n' do return;
  k <- "bar"['a']['7'];
  {
  {
  z("bar", (('\n' div '7')));
  while '7' >= '\'' do g[39] <- '\'';
  n <- d;
}
  ;
  while 41 = 10 do while 22 > 10 do g(16, 24, 24);
  ;
  return ('a' - 4);
}
  return + '7';
}
}


{

}

fun a(i : char[][21]; m, g : char[15][3]; ref bar, boo : int[][39][12]; ref h, m, boo : char[]; ref a, f, baz : char[4][1]) : nothing
var b : int;

{
  if '\'' <= 26 then ; else while 'a' < 'a' do while '7' >= 32 do return;
}


{
  if '\n' <= 4 then {
  while '7' # '\n' do return;
  return (31);
} else if 33 = '\'' then c <- 39;
  ;
}


{
  {
  foo(((+ '\n') - (+ '7')), ((40)));
}
  return;
}


{

}


{
  b <- c(n());
}

fun baz(y, baz : int; i, foo, i : int; ref n : char[]; ref foo, f : int) : nothing

{
  z <- (32);
}

var n, l, boo : char;

{
  b <- h();
  if 'a' = '\'' then z();
  return;
  {

}
  h <- ('7' mod 19);
}

fun g() : int
fun g(k : int[]; ref main : char; h, c : int[20]) : nothing
fun g(ref x : int[]) : int;
fun z(ref boo : int[][9][20]; bar, l : int[]; b, x : int[]; ref e : int; ref bar, foo, baz : char[]) : nothing

{
  if 28 < 24 then {

} else if 19 >= '7' then ;
  return + '7';
  if '\'' > '\n' then if 'a' = 2 then {
  while 25 <= '7' do h((41));
  ;
  {
  return k;
  boo();
  return e;
  if '7' < 28 then if 16 # '7' then {
  "bar"[18] <- - 13;
  {

}
  if 8 # 26 then while 27 < 0 do d <- 27; else {
  ;
  foo(boo, "Name:\t\"DouglasAdams\"\nValue:\t42\n");
}
  ;
} else ;
  l <- ('7');
}
  while 21 >= 29 do main <- 40;
  while '\'' < 'a' do return '7';
} else boo <- 13;
}


{
  return "bar";
  m();
  ;
  ;
}


{
  ;
  l <- z(+ '\n', - 'a');
  ;
  while 2 < 22 do while '7' = 15 do m <- 21;
}


{
  ;
  ;
  ;
}
