fun g(e, e : int; boo : char[][15]; y, h : char[][1]; ref m : int[]) : nothing
fun l() : char
fun boo(ref main, e : char[]; ref y : int) : int;
fun i() : int
var b, e : int;
fun k(ref foo, foo : int[][9]) : char

{
  if '7' <= 40 then return 'a';
  while 42 = 8 do if 'a' < 39 then return '\'';
  ;
  if 25 # '\n' then return; else {
  if '7' > 17 then return 16;
  while '\n' >= 12 do while '\'' # 26 do return;
}
}


{
  {
  e <- + 4;
  "bar" <- (21 * 27);
}
  ;
  while 36 <= 33 do {
  ;
  baz();
}
}

fun foo(z, y, i : char[]) : char
fun boo(d : int[26]; x, i, bar : int[][21]) : nothing
fun m() : nothing
fun k(ref k : int[31]; ref f, z : int[24]; ref i, bar, main : int) : nothing

{
  "foo" <- ('\n' div 'a');
  return;
  {
  bar(- (boo(baz(), baz, j())));
  return ('\n' div 'a');
  {
  {
  while '7' < 13 do return;
  return + '\'';
  a['7'] <- d(foo((27 mod 42), ('a'), ('a')));
  c <- - '\n';
}
  e[32] <- m(i(('\'' div 26)), l, n());
  return;
}
  baz();
}
  while 'a' < 'a' do if '\'' > '7' then ; else b <- 21;
}


{
  if '7' # 23 then while '\n' < 5 do if '7' > '\'' then while 28 < 5 do "Route66"[35] <- 37;
  if '\n' = 12 then {

}
  while 24 >= 36 do f(- 'a');
}


{
  i();
  {
  ;
  while 10 >= '7' do y <- '7';
  h['a'] <- x;
  return - 'a';
}
  while 'a' >= '7' do {
  if '\n' # 23 then ;
  ;
}
}

fun d(ref n, f : char[]; a, k : int[37]; ref e, l : char[]) : nothing;

{
  if '\n' > '7' then ; else main <- '\'';
  if 42 = '7' then ;
}


{
  while 'a' = 11 do return '\n';
  return;
  e(((('\n')) - ((18))));
}

var j, l, m : char[23];
fun z(l : char; ref bar, x, h : int[]) : char;

{
  l <- ('\'' mod 39);
  m <- - 38;
  {

}
  ;
  g <- (3);
}
