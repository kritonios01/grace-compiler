fun e(ref j, i : char[19][1]; ref boo, g, z : int[]; y : int; ref boo : char[28][36]) : nothing
fun a() : char
fun a(e, n : char[19][22]; ref i, f : int; main, a : char; ref h, g, b : char[]) : nothing
var n : char[13];

{
  ;
  {
  j <- i(('\''), - 36);
  z['\n'] <- (3 - 37);
}
  while 6 = 30 do while 18 <= 'a' do {
  {
  return (26 mod 31);
}
}
}


{
  return ('\n');
  while 36 = 31 do return;
  {
  a <- baz;
  return (0 - '\'');
  return;
  if 15 >= '7' then if '7' <= '\'' then return 6;
}
  while 42 = 'a' do ;
  {
  main();
  while 33 < '7' do {

}
  m(f, + (j("bar")));
  {
  k <- e;
  if 11 = 33 then return; else return 30;
  y(z((+ 0), (foo(x(+ 3, ('\n')), (0 - 42)))), ((('a')) * (('\''))));
  while '7' <= 41 do j(('a' div 31), c, (27));
}
}
}

fun n(l, baz, b : int[1]; g, z : int[][17][5]; b, a, x : char[]; ref g : int[23][30]; z, g : int) : nothing;

{

}
