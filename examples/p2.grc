fun k() : char
fun i(ref n : char; ref main, g : char[][30]; ref baz, z : int; ref boo, i, g : int[]) : nothing

{

}

fun e(ref n, i, k : int; ref z, h, foo : int[]; d, foo : char[]; ref baz, k, k : char[23]; ref k : char) : nothing
var boo, k, boo : char[36];
fun a(c, k : char[13]; foo, f, d : char; m : char[][35]; foo, l, j : char; k : int) : nothing
fun e(x : char[28]; ref main, b : int[]; e : char; ref h, i, e : char[][15][40]; n : char[5]) : nothing
fun b(ref y, l, x : char[][4]; n : int[][4]) : nothing
fun z(ref y, l : int) : char;
fun foo(bar, f, g : int[][36]; ref j, baz : char[33]; ref boo, d, c : char; ref k, j : int[]; ref f, d : int) : int
fun g(foo, k : char[]; ref baz, h : char[]; ref boo, a : int[36][34]) : char
fun g(ref boo : int[]) : int

{
  e <- c(h, ('a'), ('\''));
  e <- e();
  i(y(((32 * 2)), ((boo(n(- '\n'), d)) * (('\''))), (f(('7'), bar, "Route66"))));
  {
  foo <- c(('\''), (27), a);
  "bar" <- - 24;
  x(- main);
  while '7' >= 16 do a();
  {
  ;
  x <- ('a' * '\n');
  h['a'] <- + 'a';
}
}
  boo(((+ '\'') mod ((31 - 14))), + (- (baz())));
}


{
  while 19 # '7' do if 'a' # 'a' then while '\n' > 20 do if 20 # 'a' then return; else {
  return - '7';
  return;
  ;
  if '\'' = 27 then x(f, foo((10 * '\n')), h); else e((38), (12));
  ;
}
}


{
  e();
  {
  while 'a' <= 0 do if '\n' <= 19 then baz(21, '\n', '\n');
  ;
  while 25 > 'a' do while '7' > 'a' do ;
}
}


{
  ;
  ;
  ;
}

fun h(main, k : int[]; baz, a : char[][12]; ref j, b : int; b, b, f : char[36]; g : int) : char

{
  while '\n' >= 'a' do return 7;
  c(n[('7')], b);
  k(((12)), d((((26)) mod (('a'))), "Route66", + (n(main(m, ((39)))))));
}

fun f(ref j, boo : char[]; ref a : char[31]) : char;

{
  a <- m;
  ;
  m();
  while 33 # '\n' do if 5 <= '7' then "Name:\t\"DouglasAdams\"\nValue:\t42\n" <- '7'; else return;
}

fun y(baz : char[]; ref j, j : char[][38]) : int

{
  {
  {
  m <- y[26];
  baz(((('7' + 35)) mod (+ 'a')), + ((('7' - 'a'))), (k(e)));
}
  d(c, b(e((b), boo), (((36)) - (- 11))));
}
  return baz;
  ;
  if 34 > '\'' then d <- '\'';
}


{
  {
  {
  i <- (28);
  ;
  while 3 < 'a' do b[41] <- '\n';
}
  ;
  boo <- ('7' div 21);
  {

}
  while 22 # 10 do d(a);
}
  if 29 <= '\n' then if 37 > 25 then ; else while 2 >= 7 do {

}
  while 26 # 23 do {
  baz <- - '7';
  return;
  {
  d(- (((main(n(+ '\'', k((17), "Route66", + '\n')), l, (38))) div (+ 12))));
  ;
  {
  while 9 >= '\'' do return 'a';
  {
  ;
}
  return l;
}
}
  y <- ('\n' + 25);
  ;
}
}


{
  {
  if 'a' < 22 then return 28;
  foo['\''] <- bar(y);
  ;
}
}

fun bar(f, h, g : int; c, g, g : int) : char
fun e(ref main : int[]; ref m, n, h : char[]; l : char; bar, baz, a : int) : nothing
fun i(f : int[][35][5]; g, n : char[][34]) : char
var a, bar, h : int[5];

{
  return (28);
  e(+ ((i)), - y, (y + (('a'))));
  ;
  if 0 = 2 then baz <- 'a';
  ;
}


{

}

var m : char;

{
  {
  {
  while 32 > 16 do {

}
  while '7' >= '\'' do ;
  {
  return;
  return n(+ '\'', ('\n'));
}
}
  f(d, ((b((12))) - ((8 div 'a'))));
  if '\'' <= 'a' then while 4 > 13 do {
  a(f(boo((+ 2), ((('7')) + d)), - (((('a' mod '\n')) - (('\n' + 38)))), + (x[a(g(- 7, ('\n'), + 13), ('7'))])));
  while 42 = 11 do ;
} else while 'a' # '\'' do {
  z <- (30 - 9);
  boo <- + 7;
  ;
}
  {
  while '\n' >= 5 do {
  ;
}
  return;
}
  {
  if 42 <= 31 then return;
  if 'a' # '\n' then ; else {
  ;
  ;
  n[29] <- ('\'' mod '\n');
  "bar" <- (1);
  bar <- + 24;
}
  while 32 > 42 do z(('\n' div '7'));
  ;
}
}
  ;
}


{
  "foo" <- x;
  while 42 >= 29 do while 38 <= 7 do main();
  {
  return d(boo, bar, (0));
  return;
  if '\n' >= 38 then "Route66" <- 32;
  while 5 >= '7' do while '7' >= 20 do a <- 32;
}
  if 2 = 40 then if '7' >= 37 then ; else ;
}
